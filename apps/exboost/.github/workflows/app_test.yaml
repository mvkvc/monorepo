name: app_test

on:
  workflow_dispatch:
  # pull_request:
  #   paths:
  #     - .github/workflows/app_test.yaml
  #     - app/**
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - .github/workflows/app_test.yaml
  #     - app/**

env:
  ELIXIR_VERSION: 1.17.0-otp-26
  OTP_VERSION: 26.2.5

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: app
    env:
      MIX_ENV: test
      DB_URL: ecto://postgres:postgres@localhost:5433/exboost_test
    services:
      db:
        image: ankane/pgvector
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: exboost_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Step: Setup Elixir + Erlang image as the base.
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      # Step: Check out the code.
      - uses: actions/checkout@v3

        # Step: Define how to cache deps. Restores existing cache if present.
      - uses: actions/cache@v3
        id: cache-deps
        env:
          cache-name: cache-elixir-deps
        with:
          path: app/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      # Step: Define how to cache the `_build` directory. After the first run,
      # this speeds up tests runs a lot. This includes not re-compiling our
      # project's downloaded deps every run.
      - uses: actions/cache@v3
        id: cache-build
        env:
          cache-name: cache-compiled-build
        with:
          path: app/_build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      # Step: Conditionally bust the cache when job is re-run.
      # Sometimes, we may have issues with incremental builds that are fixed by
      # doing a full recompile. In order to not waste dev time on such trivial
      # issues (while also reaping the time savings of incremental builds for
      # *most* day-to-day development), force a full recompile only on builds
      # that are retried.
      - run: |
          mix deps.clean --all
          mix clean
        shell: sh
        if: github.run_attempt != '1'

      # Step: Download project dependencies. If unchanged, uses
      # the cached version.
      - run: mix deps.get

      # Step: Compile the project treating any warnings as errors.
      # Customize this step if a different behavior is desired.
      # TODO: Add --warnings-as-errors flag
      - run: mix compile

      # Step: Execute the tests.
      - run: mix test
