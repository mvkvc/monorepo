---
import type { CollectionEntry } from "astro:content";

import BaseLayout from "./Base.astro";
import BlogHero from "@/components/blog/Hero";

// const shiki = require("shiki");
import * as shiki from "shiki";
shiki.getHighlighter({ theme: "css-variables" });

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const {
	data: { title, description, ogImage, publishDate },
	slug,
} = post;
const socialImage = ogImage ?? `/og-image/${slug}.png`;
const articleDate = publishDate.toISOString();
const { headings } = await post.render();
---

<script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ top: 0, behavior: "smooth" });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>

<style>
	:root {
		--shiki-color-text: #eeeeee;
		--shiki-color-background: #333333;
		--shiki-token-constant: #660000;
		--shiki-token-string: #770000;
		--shiki-token-comment: #880000;
		--shiki-token-keyword: #990000;
		--shiki-token-parameter: #aa0000;
		--shiki-token-function: #bb0000;
		--shiki-token-string-expression: #cc0000;
		--shiki-token-punctuation: #dd0000;
		--shiki-token-link: #ee0000;

		/* Only required if using ansiToHtml function */
		--shiki-color-ansi-black: #000000;
		--shiki-color-ansi-black-dim: #00000080;
		--shiki-color-ansi-red: #bb0000;
		--shiki-color-ansi-red-dim: #bb000080;
		--shiki-color-ansi-green: #00bb00;
		--shiki-color-ansi-green-dim: #00bb0080;
		--shiki-color-ansi-yellow: #bbbb00;
		--shiki-color-ansi-yellow-dim: #bbbb0080;
		--shiki-color-ansi-blue: #0000bb;
		--shiki-color-ansi-blue-dim: #0000bb80;
		--shiki-color-ansi-magenta: #ff00ff;
		--shiki-color-ansi-magenta-dim: #ff00ff80;
		--shiki-color-ansi-cyan: #00bbbb;
		--shiki-color-ansi-cyan-dim: #00bbbb80;
		--shiki-color-ansi-white: #eeeeee;
		--shiki-color-ansi-white-dim: #eeeeee80;
		--shiki-color-ansi-bright-black: #555555;
		--shiki-color-ansi-bright-black-dim: #55555580;
		--shiki-color-ansi-bright-red: #ff5555;
		--shiki-color-ansi-bright-red-dim: #ff555580;
		--shiki-color-ansi-bright-green: #00ff00;
		--shiki-color-ansi-bright-green-dim: #00ff0080;
		--shiki-color-ansi-bright-yellow: #ffff55;
		--shiki-color-ansi-bright-yellow-dim: #ffff5580;
		--shiki-color-ansi-bright-blue: #5555ff;
		--shiki-color-ansi-bright-blue-dim: #5555ff80;
		--shiki-color-ansi-bright-magenta: #ff55ff;
		--shiki-color-ansi-bright-magenta-dim: #ff55ff80;
		--shiki-color-ansi-bright-cyan: #55ffff;
		--shiki-color-ansi-bright-cyan-dim: #55ffff80;
		--shiki-color-ansi-bright-white: #ffffff;
		--shiki-color-ansi-bright-white-dim: #ffffff80;
	}
</style>

<BaseLayout meta={{ title, description, articleDate, ogImage: socialImage }}>
	<div class="gap-x-10 lg:flex lg:items-start">
		{
			!!headings.length && (
				<aside class="sticky top-20 order-2 -me-32 hidden basis-64 lg:block">
					<h2 class="font-semibold">Table of Contents</h2>
					<ul class="mt-4 text-xs">
						{headings.map(({ depth, slug, text }) => (
							<li class="line-clamp-2 hover:text-accent">
								<a
									class={`block ${depth <= 2 ? "mt-3" : "mt-2 ps-3 text-[0.6875rem]"}`}
									href={`#${slug}`}
									aria-label={`Scroll to section: ${text}`}
								>
									<span>{"#".repeat(depth)}</span> {text}
								</a>
							</li>
						))}
					</ul>
				</aside>
			)
		}
		<article class="flex-grow break-words">
			<div id="blog-hero"><BlogHero content={post} /></div>
			<div
				class="prose prose-sm prose-cactus mt-12 max-w-2xl prose-headings:font-semibold prose-headings:before:absolute prose-headings:before:-ms-4 prose-headings:before:text-accent prose-headings:before:content-['#'] prose-th:before:content-none"
			>
				<slot />
			</div>
		</article>
	</div>
	<button
		id="to-top-btn"
		class="z-90 fixed bottom-8 end-4 flex h-10 w-10 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-zinc-200 text-3xl opacity-0 transition-all duration-300 hover:border-zinc-400 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 dark:bg-zinc-700 sm:end-8 sm:h-12 sm:w-12"
		aria-label="Back to Top"
		data-show="false"
		><svg
			xmlns="http://www.w3.org/2000/svg"
			aria-hidden="true"
			focusable="false"
			fill="none"
			viewBox="0 0 24 24"
			stroke-width="2"
			stroke="currentColor"
			class="h-6 w-6"
		>
			<path stroke-linecap="round" stroke-linejoin="round" d="M4.5 15.75l7.5-7.5 7.5 7.5"></path>
		</svg>
	</button>
</BaseLayout>
