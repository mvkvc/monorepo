# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_retrieve.ipynb.

# %% auto 0
__all__ = ['SUPPORTED_DB', 'File', 'Chunk', 'db_setup', 'db_create_chunk_table']

# %% ../nbs/05_retrieve.ipynb 4
from typing import Literal, Optional

from sqlmodel import Field, Session, SQLModel, create_engine

# %% ../nbs/05_retrieve.ipynb 5
SUPPORTED_DB = Literal["sqlite", "postgresql"]

# %% ../nbs/05_retrieve.ipynb 6
class File(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    source: str

# %% ../nbs/05_retrieve.ipynb 7
class Chunk(SQLModel):
    id: Optional[int] = Field(default=None, primary_key=True)
    file_id: int
    text: str

# %% ../nbs/05_retrieve.ipynb 8
def db_setup(url: str, db: SUPPORTED_DB = "sqlite"):
    if db not in SUPPORTED_DB:
        raise ValueError(f"Unsupported database {db}")

    # Ensure create_engine works for async psycog with sqlmodel
    engine = create_engine(url, echo=True)
    SQLModel.metadata.create_all(engine)

    return engine

# %% ../nbs/05_retrieve.ipynb 9
def db_create_chunk_table(engine, chunk_strategy):
    table_name = f"chunk_{chunk_strategy}"
    table = Chunk.__table__.replace(table_name=table_name)
    table.create(engine)
