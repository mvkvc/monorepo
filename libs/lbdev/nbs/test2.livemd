```elixir
import MyMacro

defmodule M do
  MyMacro.generate_functions([
    {:f, 2},
    {:g, 3}
  ])
end
```

```elixir
MyMacro.define_implementation M, f(x, y) do
  x + y
end

expr = M.f(10, 20)
IO.inspect("ADDING: #{expr}")
```

```elixir
MyMacro.define_implementation M, f(x, y) do
  x - y
end

expr = M.f(10, 20)
IO.inspect("SUBTRACT: #{expr}")
```

```elixir
MyMacro.define_implementation M, g(x, y, z) do
  x * y * z
end

expr = M.g(2, 3, 4)
IO.inspect("MULTIPLY: #{expr}")
```

```elixir
MyMacro.define_implementation M, g(x, y, z) do
  x ** y ** z
end

expr = M.g(2, 3, 4)
IO.inspect("POWER: #{expr}")
```
