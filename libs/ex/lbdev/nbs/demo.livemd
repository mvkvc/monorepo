<!-- livebook:{"persist_outputs":true} -->

# demo

## Section

```elixir
defmodule MyMacro do
  defmacro define_implementation(mod, call, do: block) do
    {fun_name, context, args} = call

    arity = length(args)

    quote do
      f = fn unquote_splicing(args) ->
        unquote(block)
      end

      Process.put({unquote(mod), unquote(fun_name), unquote(arity)}, f)
      :ok
    end
  end

  defmacro generate_functions(functions) do
    for {name, arity} <- functions do
      args = for i <- 0..(arity - 1), do: {String.to_atom("arg#{i}"), [], Elixir}

      quote do
        def unquote(name)(unquote_splicing(args)) do
          impl =
            Process.get({__MODULE__, unquote(name), unquote(arity)}, fn unquote_splicing(args) ->
              raise "not implemented"
            end)

          impl.(unquote_splicing(args))
        end
      end
    end
  end
end
```

<!-- livebook:{"output":true} -->

```
warning: variable "context" is unused (if the variable is not meant to be used, prefix it with an underscore)
  #cell:cu5r7d52s6wjywrw4yd6ukjgd3vdhkkd:3: MyMacro.define_implementation/3

```

<!-- livebook:{"output":true} -->

```
{:module, MyMacro, <<70, 79, 82, 49, 0, 0, 14, ...>>, {:generate_functions, 1}}
```

```elixir
import MyMacro

defmodule M do
  MyMacro.generate_functions([
    {:f, 2},
    {:g, 3}
  ])
end
```

<!-- livebook:{"output":true} -->

```
{:module, M, <<70, 79, 82, 49, 0, 0, 8, ...>>, [f: 2, g: 3]}
```

```elixir
MyMacro.define_implementation M, f(x, y) do
  x + y
end

expr = M.f(10, 20)
IO.inspect("ADDING: #{expr}")
```

<!-- livebook:{"output":true} -->

```
"ADDING: 30"
```

<!-- livebook:{"output":true} -->

```
"ADDING: 30"
```

```elixir
MyMacro.define_implementation M, f(x, y) do
  x - y
end

expr = M.f(10, 20)
IO.inspect("SUBTRACT: #{expr}")
```

<!-- livebook:{"output":true} -->

```
"SUBTRACT: -10"
```

<!-- livebook:{"output":true} -->

```
"SUBTRACT: -10"
```

```elixir
MyMacro.define_implementation M, g(x, y, z) do
  x * y * z
end

expr = M.g(2, 3, 4)
IO.inspect("MULTIPLY: #{expr}")
```

<!-- livebook:{"output":true} -->

```
"MULTIPLY: 24"
```

<!-- livebook:{"output":true} -->

```
"MULTIPLY: 24"
```

```elixir
Process.get()
```

<!-- livebook:{"output":true} -->

```
[
  {{M, :f, 2}, #Function<41.3316493/2 in :erl_eval.expr/6>},
  {:"$ancestors",
   [#PID<0.132.0>, #PID<0.131.0>, #PID<0.127.0>, Livebook.Runtime.ErlDist.NodeManager,
    #PID<0.125.0>]},
  {{M, :g, 3}, #Function<40.3316493/3 in :erl_eval.expr/6>},
  {:elixir_checker_info, {#PID<0.137.0>, nil}},
  {:evaluator_info,
   %{
     contexts: %{
       "cu5r7d52s6wjywrw4yd6ukjgd3vdhkkd" => {"3urooyrhzde4jizayvm67zndwgwuupmz",
        #Macro.Env<
          aliases: [],
          context: nil,
          context_modules: [MyMacro],
          file: "#cell:cu5r7d52s6wjywrw4yd6ukjgd3vdhkkd",
          function: nil,
          functions: [
            {Kernel,
             [
               !=: 2,
               !==: 2,
               *: 2,
               **: 2,
               +: 1,
               +: 2,
               ++: 2,
               -: 1,
               -: 2,
               --: 2,
               /: 2,
               <: 2,
               <=: 2,
               ==: 2,
               ===: 2,
               =~: 2,
               >: 2,
               >=: 2,
               abs: 1,
               apply: 2,
               apply: 3,
               binary_part: 3,
               binary_slice: 2,
               binary_slice: 3,
               bit_size: 1,
               byte_size: 1,
               ceil: 1,
               div: 2,
               elem: 2,
               exit: 1,
               ...
             ]}
          ],
          lexical_tracker: nil,
          line: 1,
          macro_aliases: [],
          macros: [
            {Kernel,
             [
               !: 1,
               &&: 2,
               ..: 0,
               ..: 2,
               ..//: 3,
               <>: 2,
               @: 1,
               alias!: 1,
               and: 2,
               binding: 0,
               binding: 1,
               dbg: 0,
               dbg: 1,
               dbg: 2,
               def: 1,
               def: 2,
               defdelegate: 2,
               defexception: 1,
               defguard: 1,
               defguardp: 1,
               defimpl: 2,
               defimpl: 3,
               defmacro: 1,
               defmacro: 2,
               defmacrop: 1,
               defmacrop: 2,
               ...
             ]}
          ],
          module: nil,
          requires: [],
          ...
        >},
       "fzntzarcn3tluipp4vobjqtgcohdngua" => {"zdhkdqjy6tgz22wwsow33xsgkbk3yj5b",
        #Macro.Env<
          aliases: [],
          context: nil,
          context_modules: [M],
          file: "#cell:fzntzarcn3tluipp4vobjqtgcohdngua",
          function: nil,
          functions: [
            {Kernel,
             [
               !=: 2,
               !==: 2,
               *: 2,
               **: 2,
               +: 1,
               +: 2,
               ++: 2,
               -: 1,
               -: 2,
               --: 2,
               /: 2,
               <: 2,
               <=: 2,
               ==: 2,
               ===: 2,
               =~: 2,
               >: 2,
               >=: 2,
               abs: 1,
               apply: 2,
               apply: 3,
               binary_part: 3,
               binary_slice: 2,
               binary_slice: 3,
               bit_size: 1,
               byte_size: 1,
               ceil: 1,
               div: 2,
               elem: 2,
               ...
             ]}
          ],
          lexical_tracker: nil,
          line: 1,
          macro_aliases: [],
          macros: [
            {MyMacro, [define_implementation: 3, generate_functions: 1]},
            {Kernel,
             [
               !: 1,
               &&: 2,
               ..: 0,
               ..: 2,
               ..//: 3,
               <>: 2,
               @: 1,
               alias!: 1,
               and: 2,
               binding: 0,
               binding: 1,
               dbg: 0,
               dbg: 1,
               dbg: 2,
               def: 1,
               def: 2,
               defdelegate: 2,
               defexception: 1,
               defguard: 1,
               defguardp: 1,
               defimpl: 2,
               defimpl: 3,
               defmacro: 1,
               defmacro: 2,
               ...
             ]}
          ],
          module: nil,
          requires: [MyMacro],
          ...
        >},
       "mmq5r4yxwyadbf73d3zdlyghvie2ankz" => {"witeyb5nye7rllxsv4ub7c4bj2rhibfh",
        #Macro.Env<
          aliases: [],
          context: nil,
          context_modules: [],
          file: "#cell:mmq5r4yxwyadbf73d3zdlyghvie2ankz",
          function: nil,
          functions: [
            {Kernel,
             [
               !=: 2,
               !==: 2,
               *: 2,
               **: 2,
               +: 1,
               +: 2,
               ++: 2,
               -: 1,
               -: 2,
               --: 2,
               /: 2,
               <: 2,
               <=: 2,
               ==: 2,
               ===: 2,
               =~: 2,
               >: 2,
               >=: 2,
               abs: 1,
               apply: 2,
               apply: 3,
               binary_part: 3,
               binary_slice: 2,
               binary_slice: 3,
               bit_size: 1,
               byte_size: 1,
               ceil: 1,
               div: 2,
               ...
             ]}
          ],
          lexical_tracker: nil,
          line: 1,
          macro_aliases: [],
          macros: [
            {MyMacro, [define_implementation: 3, generate_functions: 1]},
            {Kernel,
             [
               !: 1,
               &&: 2,
               ..: 0,
               ..: 2,
               ..//: 3,
               <>: 2,
               @: 1,
               alias!: 1,
               and: 2,
               binding: 0,
               binding: 1,
               dbg: 0,
               dbg: 1,
               dbg: 2,
               def: 1,
               def: 2,
               defdelegate: 2,
               defexception: 1,
               defguard: 1,
               defguardp: 1,
               defimpl: 2,
               defimpl: 3,
               defmacro: 1,
               ...
             ]}
          ],
          module: nil,
          requires: [],
          ...
        >},
       "setup" => {"dvy6nbzfpdkd2ampgp4webigb2qnxp7t",
        #Macro.Env<
          aliases: [],
          context: nil,
          context_modules: [],
          file: "#cell:setup",
          function: nil,
          functions: [
            {Kernel,
             [
               !=: 2,
               !==: 2,
               *: 2,
               **: 2,
               +: 1,
               +: 2,
               ++: 2,
               -: 1,
               -: 2,
               --: 2,
               /: 2,
               <: 2,
               <=: 2,
               ==: 2,
               ===: 2,
               =~: 2,
               >: 2,
               >=: 2,
               abs: 1,
               apply: 2,
               apply: 3,
               binary_part: 3,
               binary_slice: 2,
               binary_slice: 3,
               bit_size: 1,
               byte_size: 1,
               ceil: 1,
               ...
             ]}
          ],
          lexical_tracker: nil,
          line: 1,
          macro_aliases: [],
          macros: [
            {Kernel,
             [
               !: 1,
               &&: 2,
               ..: 0,
               ..: 2,
               ..//: 3,
               <>: 2,
               @: 1,
               alias!: 1,
               and: 2,
               binding: 0,
               binding: 1,
               dbg: 0,
               dbg: 1,
               dbg: 2,
               def: 1,
               def: 2,
               defdelegate: 2,
               defexception: 1,
               defguard: 1,
               defguardp: 1,
               defimpl: 2,
               defimpl: 3,
               defmacro: 1,
               ...
             ]}
          ],
          module: nil,
          requires: [],
          ...
        >},
       "w37ksjwfdfcwp7yvoaxabaqz5swfodcq" => {"4j7fbi6t3rxjgzcwokq77ryy5to5ypfa",
        #Macro.Env<
          aliases: [],
          context: nil,
          context_modules: [],
          file: "#cell:w37ksjwfdfcwp7yvoaxabaqz5swfodcq",
          function: nil,
          functions: [
            {Kernel,
             [
               !=: 2,
               !==: 2,
               *: 2,
               **: 2,
               +: 1,
               +: 2,
               ++: 2,
               -: 1,
               -: 2,
               --: 2,
               /: 2,
               <: 2,
               <=: 2,
               ==: 2,
               ===: 2,
               =~: 2,
               >: 2,
               >=: 2,
               abs: 1,
               apply: 2,
               apply: 3,
               binary_part: 3,
               binary_slice: 2,
               binary_slice: 3,
               bit_size: 1,
               byte_size: 1,
               ...
             ]}
          ],
          lexical_tracker: nil,
          line: 1,
          macro_aliases: [],
          macros: [
            {MyMacro, [define_implementation: 3, generate_functions: 1]},
            {Kernel,
             [
               !: 1,
               &&: 2,
               ..: 0,
               ..: 2,
               ..//: 3,
               <>: 2,
               @: 1,
               alias!: 1,
               and: 2,
               binding: 0,
               binding: 1,
               dbg: 0,
               dbg: 1,
               dbg: 2,
               def: 1,
               def: 2,
               defdelegate: 2,
               defexception: 1,
               defguard: 1,
               defguardp: 1,
               defimpl: 2,
               ...
             ]}
          ],
          module: nil,
          requires: [],
          ...
        >},
       "wfr2uk5fb2tvmc7ybvod3kjj7zdnjbjl" => {"ymx3rrknkzwppsfcyt4olrg64as2iyev",
        #Macro.Env<
          aliases: [],
          context: nil,
          context_modules: [],
          file: "#cell:wfr2uk5fb2tvmc7ybvod3kjj7zdnjbjl",
          function: nil,
          functions: [
            {Kernel,
             [
               !=: 2,
               !==: 2,
               *: 2,
               **: 2,
               +: 1,
               +: 2,
               ++: 2,
               -: 1,
               -: 2,
               --: 2,
               /: 2,
               <: 2,
               <=: 2,
               ==: 2,
               ===: 2,
               =~: 2,
               >: 2,
               >=: 2,
               abs: 1,
               apply: 2,
               apply: 3,
               binary_part: 3,
               binary_slice: 2,
               binary_slice: 3,
               bit_size: 1,
               ...
             ]}
          ],
          lexical_tracker: nil,
          line: 1,
          macro_aliases: [],
          macros: [
            {MyMacro, [define_implementation: 3, generate_functions: 1]},
            {Kernel,
             [
               !: 1,
               &&: 2,
               ..: 0,
               ..: 2,
               ..//: 3,
               <>: 2,
               @: 1,
               alias!: 1,
               and: 2,
               binding: 0,
               binding: 1,
               dbg: 0,
               dbg: 1,
               dbg: 2,
               def: 1,
               def: 2,
               defdelegate: 2,
               defexception: 1,
               defguard: 1,
               defguardp: 1,
               ...
             ]}
          ],
          module: nil,
          requires: [],
          ...
        >}
     },
     initial_context: {"qqsw6guv5xdvfosbibuvz727h4c5kiuu",
      #Macro.Env<
        aliases: [],
        context: nil,
        context_modules: [],
        file: "nofile",
        function: nil,
        functions: [
          {Kernel,
           [
             !=: 2,
             !==: 2,
             *: 2,
             **: 2,
             +: 1,
             +: 2,
             ++: 2,
             -: 1,
             -: 2,
             --: 2,
             /: 2,
             <: 2,
             <=: 2,
             ==: 2,
             ===: 2,
             =~: 2,
             >: 2,
             >=: 2,
             abs: 1,
             apply: 2,
             apply: 3,
             binary_part: 3,
             binary_slice: 2,
             binary_slice: 3,
             bit_size: 1,
             byte_size: 1,
             ceil: 1,
             div: 2,
             elem: 2,
             exit: 1,
             ...
           ]}
        ],
        lexical_tracker: nil,
        line: 1,
        macro_aliases: [],
        macros: [
          {Kernel,
           [
             !: 1,
             &&: 2,
             ..: 0,
             ..: 2,
             ..//: 3,
             <>: 2,
             @: 1,
             alias!: 1,
             and: 2,
             binding: 0,
             binding: 1,
             dbg: 0,
             dbg: 1,
             dbg: 2,
             def: 1,
             def: 2,
             defdelegate: 2,
             defexception: 1,
             defguard: 1,
             defguardp: 1,
             defimpl: 2,
             defimpl: 3,
             defmacro: 1,
             defmacro: 2,
             defmacrop: 1,
             defmacrop: 2,
             ...
           ]}
        ],
        module: nil,
        requires: [Application, Kernel, Kernel.Typespec],
        ...
      >}
   }},
  {:ebin_path,
   "/var/folders/b1/rs39pjw5505dnzh83s55wxt00000gn/T/livebook_runtime/iiinxufocffo46x76tf5fxklb5arwp43/ebin"},
  {:"$initial_call", {Livebook.Runtime.Evaluator, :init, 1}}
]
```
