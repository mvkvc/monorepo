# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_wrappers.ipynb.

# %% auto 0
__all__ = ['DiscreteActionWrapper']

# %% ../nbs/04_wrappers.ipynb 4
from typing import *

from fastcore.basics import patch
import gymnasium as gym
from gymnasium.spaces import Box
from gymnasium.spaces import Discrete

import rlmm
from .core import *
from .utils import *

# %% ../nbs/04_wrappers.ipynb 6
class DiscreteActionWrapper(gym.ActionWrapper):
    def __init__(self, env: gym.Env, action_dict: Dict[int, Any]):
        super().__init__(env)
        self.action_dict = action_dict
        self.action_space = Discrete(len(action_dict))

    def action(self, action: int):
        if action not in self.action_dict.keys():
            raise ValueError(
                f"Discrete action {action} not in action_dict {action_dict}"
            )

        return self.action_dict[action]
